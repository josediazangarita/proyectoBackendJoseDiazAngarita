openapi: 3.0.1
info:
  title: Ecommerce API
  description: API para la gestión de productos en una aplicación de comercio electrónico
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Servidor local
paths:
  /api/products:
    get:
      summary: Obtener todos los productos
      description: Retorna una lista de todos los productos, con la opción de filtrar por categoría y paginación.
      parameters:
        - name: category
          in: query
          description: Categoría para filtrar productos
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Página para la paginación
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Límite de productos por página
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Lista de productos obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '500':
          description: Error al obtener productos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Agregar un nuevo producto
      description: Crea un nuevo producto en la base de datos.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Producto agregado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Error de validación al agregar el producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error al agregar producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/products/{pid}:
    get:
      summary: Obtener un producto por ID
      description: Retorna un producto específico por su ID.
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a obtener
          schema:
            type: string
      responses:
        '200':
          description: Producto obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error al obtener producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar un producto
      description: Actualiza los detalles de un producto específico.
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Error de validación al actualizar el producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error al actualizar producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Eliminar un producto
      description: Elimina un producto específico por su ID.
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
        '403':
          description: Acceso denegado. No puedes eliminar este producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error al eliminar producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        code:
          type: string
        price:
          type: number
        stock:
          type: number
        category:
          type: string
        thumbnails:
          type: array
          items:
            type: string
        owner:
          type: string
    ProductInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        code:
          type: string
        price:
          type: number
        stock:
          type: number
        category:
          type: string
        thumbnails:
          type: array
          items:
            type: string
    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
        details:
          type: string